{"version":3,"sources":["components/Tabs/TabsHoc.js","components/Tabs/styles.js","components/Movies/MoviesHoc.js","components/Movies/styles.js","components/MoviesForm/MoviesFormHoc.js","components/MoviesForm/styles.js","components/MoviesForm/mutations.js","components/MoviesTable/queries.js","components/MoviesForm/queries.js","components/MoviesForm/MoviesForm.js","components/MoviesTable/MoviesTableHoc.js","components/MoviesTable/styles.js","components/DialogModal/DialogModal.js","components/MoviesDialog/mutations.js","components/MoviesDialog/MoviesDialog.js","components/SearchPanel/SearchPanel.js","components/SearchPanel/SearchPanelHoc.js","components/SearchPanel/styles.js","components/MoviesSearch/MoviesSearch.js","components/MoviesTable/MoviesTable.js","components/Movies/Movies.js","components/Directors/DirectorsHoc.js","components/Directors/styles.js","components/DirectorsForm/DirectorsFormHoc.js","components/DirectorsForm/styles.js","components/DirectorsForm/mutations.js","components/DirectorsTable/queries.js","components/DirectorsForm/DirectorsForm.js","components/DirectorsTable/DirectorsTableHoc.js","components/DirectorsTable/styles.js","components/DirectorsDialog/mutations.js","components/DirectorsDialog/DirectorsDialog.js","components/DirectorsSearch/DirectorsSearch.js","components/DirectorsErrorDialogModal/DirectorsErrorDialogModal.js","components/DirectorsTable/DirectorsTable.js","components/Directors/Directors.js","components/Tabs/Tabs.js","components/theme.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","flexGrow","backgroundColor","withTheme","wrapper","position","minHeight","fab","bottom","right","container","padding","spacing","title","paddingBottom","textField","width","formControl","minWidth","formControlSelect","marginTop","display","justifyContent","button","addMovieMutation","gql","updateMovieMutation","moviesQuery","directorsQuery","withHocs","selectedValue","onClose","classes","open","handleChange","handleSelectChange","handleCheckboxChange","useState","showAlert","setShowAlert","useMutation","addMovie","updateMovie","useQuery","variables","name","data","directors","Dialog","aria-labelledby","DialogTitle","className","id","action","noValidate","autoComplete","TextField","label","value","onChange","margin","variant","genre","rate","type","FormControl","InputLabel","ref","htmlFor","Select","directorId","input","OutlinedInput","labelWidth","map","director","MenuItem","key","FormControlLabel","control","Checkbox","checked","watched","Button","onClick","Number","Boolean","refetchQueries","query","color","Alert","severity","searchRoot","marginBottom","overflowX","DialogModal","handleClose","handleDelete","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","deleteMovieMutation","MoviesDialog","deleteMovie","search","searchIcon","height","pointerEvents","alignItems","inputRoot","inputInput","paddingTop","paddingRight","paddingLeft","handleSearch","placeholderName","InputBase","onKeyPress","e","placeholder","MoviesSearch","onOpen","movies","setMovies","anchorEl","setAnchorEl","openDialog","setOpenDialog","itemData","setItemData","setName","useLazyQuery","getMovies","loading","fetchMore","useEffect","handleEdit","handleDialogOpen","Paper","event","target","charCode","updateQuery","previousResult","fetchMoreResult","LinearProgress","Table","TableHead","TableRow","TableCell","align","TableBody","movie","component","scope","disabled","IconButton","currentTarget","handleClick","Menu","movieData","setMovieData","handleClickOpen","prevState","Fab","aria-label","unit","addDirectorMutation","updateDirectorMutation","alertMessage","alert","setAlert","addDirector","updateDirector","age","parseInt","deleteDirectorMutation","DirectorsDialog","deleteDirector","DirectorsSearch","DirectorsErrorDialogModal","errorText","setDirectors","openErrorDialog","setOpenErrorDialog","getDirectors","length","handleErrorDialogOpen","directorData","setDirectorData","TabContainer","children","dir","Typography","style","setValue","AppBar","Tabs","Tab","icon","axis","direction","index","onChangeIndex","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","blue","error","red","contrastThreshold","tonalOffset","contrastText","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2f87be3e.chunk.js","sourcesContent":["import {withStyles} from \"@material-ui/core/styles\";\r\n\r\nimport {styles} from \"./styles\";\r\n\r\nexport default withStyles(styles, {withTheme: true})","export const styles = theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: '#212121',\n    }\n});","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n        minHeight: 'calc(100vh - 24px * 2 - 72px)',\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: '0.5rem',\r\n        right: '4rem',\r\n    },\r\n});","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    container: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    title: {\r\n        paddingBottom: 0,\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n    },\r\n    formControlSelect: {\r\n        marginTop: theme.spacing(2),\r\n        width: '100%',\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    button: {\r\n        minWidth: 100,\r\n    }\r\n});","import {gql} from '@apollo/client';\r\n\r\nexport const addMovieMutation = gql`\r\n    mutation addMovie($name: String!, $genre: String!, $watched: Boolean!, $rate: Int, $directorId: ID!) {\r\n        addMovie(name: $name, genre: $genre, watched: $watched, rate: $rate, directorId: $directorId) {\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const updateMovieMutation = gql`\r\n    mutation updateMovie($id: ID, $name: String!, $genre: String!, $watched: Boolean!, $rate: Int, $directorId: ID!) {\r\n        updateMovie(id: $id, name: $name, genre: $genre, watched: $watched, rate: $rate, directorId: $directorId) {\r\n            name\r\n        }\r\n    }\r\n`;","import {gql} from '@apollo/client';\r\n\r\nexport const moviesQuery = gql`\r\n    query moviesQuery($name: String) {\r\n        movies(name: $name) {\r\n            id\r\n            name\r\n            genre\r\n            watched\r\n            rate\r\n            director {\r\n                name\r\n                id\r\n            }\r\n        }\r\n    } \r\n`;","import {gql} from '@apollo/client';\r\n\r\nexport const directorsQuery = gql`\r\n    query directorsQuery($name: String) {\r\n        directors(name: $name) {\r\n            id\r\n            name\r\n        }\r\n    } \r\n`;","import React, {useState} from \"react\";\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    OutlinedInput,\r\n    MenuItem,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {useMutation, useQuery} from '@apollo/client';\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nimport withHocs from './MoviesFormHoc';\r\nimport {addMovieMutation, updateMovieMutation} from \"./mutations\";\r\nimport {moviesQuery} from \"../MoviesTable/queries\";\r\nimport {directorsQuery} from \"./queries\";\r\n\r\nconst MoviesForm = (\r\n    {\r\n        selectedValue = {},\r\n        onClose,\r\n        classes,\r\n        open,\r\n        handleChange,\r\n        handleSelectChange,\r\n        handleCheckboxChange\r\n    }\r\n) => {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addMovie] = useMutation(addMovieMutation);\r\n    const [updateMovie] = useMutation(updateMovieMutation);\r\n    const {data = {}} = useQuery(directorsQuery, {\r\n        variables: {name: \"\"}\r\n    });\r\n    const {directors = []} = data;\r\n\r\n    const handleClose = () => onClose();\r\n\r\n    const handleSave = () => {\r\n        const {id, name, genre, rate, directorId, watched} = selectedValue;\r\n\r\n        if (name === '' || genre === '' || directorId === '') {\r\n            setShowAlert(true)\r\n        } else {\r\n            if (id) {\r\n                updateMovie({\r\n                    variables: {id, name, genre, rate: Number(rate), directorId, watched: Boolean(watched)},\r\n                    refetchQueries: [{\r\n                        query: moviesQuery,\r\n                        variables: {name: \"\"}\r\n                    }]\r\n                });\r\n            } else {\r\n                addMovie({\r\n                    variables: {name, genre, rate: Number(rate), directorId, watched: Boolean(watched)},\r\n                    refetchQueries: [{\r\n                        query: moviesQuery,\r\n                        variables: {name: \"\"}\r\n                    }]\r\n                });\r\n            }\r\n\r\n            setShowAlert(false);\r\n            onClose()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open} aria-labelledby=\"simple-dialog-title\">\r\n            <DialogTitle className={classes.title} id=\"simple-dialog-title\">Movie information</DialogTitle>\r\n\r\n            <form action=\"/\" className={classes.container} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Name\"\r\n                    className={classes.textField}\r\n                    value={selectedValue.name}\r\n                    onChange={handleChange('name')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-genre\"\r\n                    label=\"Genre\"\r\n                    className={classes.textField}\r\n                    value={selectedValue.genre}\r\n                    onChange={handleChange('genre')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-rate\"\r\n                    label=\"Rate\"\r\n                    value={selectedValue.rate}\r\n                    onChange={handleChange('rate')}\r\n                    type=\"number\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n\r\n                <FormControl variant=\"outlined\" className={classes.formControlSelect}>\r\n                    <InputLabel ref={ref => {let InputLabelRef = ref}} htmlFor=\"outlined-age-simple\">\r\n                        Director\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        value={selectedValue.directorId}\r\n                        onChange={handleSelectChange}\r\n                        input={<OutlinedInput name=\"directorId\" id=\"outlined-director\" labelWidth={57} />}\r\n                    >\r\n                        {directors.map(director => <MenuItem key={director.id} value={director.id}>{director.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <div className={classes.wrapper}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={selectedValue.watched}\r\n                                onChange={handleCheckboxChange('watched')}\r\n                                value=\"watched\"\r\n                            />}\r\n                        label=\"Watched movie\"\r\n                    />\r\n\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                        <SaveIcon /> Save\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            {showAlert && <Alert severity=\"error\">Please note the movie's name and genre and choose the director</Alert>}\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withHocs(MoviesForm)","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    searchRoot: {\r\n        marginBottom: theme.spacing(3),\r\n        minHeight: theme.spacing(6),\r\n        display: 'flex',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    }\r\n});","import React from \"react\";\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\nconst DialogModal = ({open, handleClose, handleDelete}) => (\r\n    <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n        <DialogTitle id=\"alert-dialog-title\">Are you sure that you want to delete element?</DialogTitle>\r\n\r\n        <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                If you click 'Confirm' this element will be removed from data base.\r\n            </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\"><BlockIcon /> Cancel</Button>\r\n            <Button onClick={handleDelete} color=\"primary\" autoFocus><DeleteForeverIcon/> Confirm</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default DialogModal","import {gql} from '@apollo/client';\r\n\r\nexport const deleteMovieMutation = gql`\r\n    mutation deleteMovie($id: ID) {\r\n        deleteMovie(id: $id) {\r\n            id\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {useMutation} from '@apollo/client';\r\n\r\nimport DialogModal from \"../DialogModal/DialogModal\";\r\nimport {deleteMovieMutation} from \"./mutations\";\r\nimport {moviesQuery} from \"../MoviesTable/queries\";\r\n\r\nconst MoviesDialog = ({id, handleClose, open}) => {\r\n    const [deleteMovie] = useMutation(deleteMovieMutation);\r\n\r\n    const handleDelete = () => {\r\n        deleteMovie({\r\n            variables: {id},\r\n            refetchQueries: [{\r\n                query: moviesQuery,\r\n                variables: {name: \"\"}\r\n            }]\r\n        });\r\n        handleClose()\r\n    };\r\n\r\n    return <DialogModal open={open} handleClose={handleClose} handleDelete={handleDelete}/>\r\n};\r\n\r\nexport default MoviesDialog","import React from \"react\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport withHocs from './SearchPanelHoc';\r\n\r\nconst SearchPanel = ({classes, name, handleChange, handleSearch, placeholderName}) => (\r\n    <div className={classes.search}>\r\n        <div className={classes.searchIcon}>\r\n            <SearchIcon />\r\n        </div>\r\n\r\n        <InputBase\r\n            onChange={handleChange}\r\n            onKeyPress={(e) => handleSearch(e)}\r\n            value={name}\r\n            placeholder={placeholderName}\r\n            classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n            }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default withHocs(SearchPanel)","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    search: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(9),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n        width: '100%',\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingLeft: theme.spacing(10),\r\n    },\r\n});","import React from \"react\";\r\n\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\n\r\nconst MoviesSearch = ({name, handleChange, handleSearch}) => {\r\n    return <SearchPanel\r\n        name={name}\r\n        handleChange={handleChange}\r\n        handleSearch={handleSearch}\r\n        placeholderName=\"Movies Search\"\r\n    />\r\n};\r\n\r\nexport default MoviesSearch","import React, {useState, useEffect} from \"react\";\r\nimport {\r\n    Paper,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody,\r\n    Checkbox,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem\r\n} from \"@material-ui/core\";\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {useLazyQuery} from '@apollo/client';\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nimport withHocs from './MoviesTableHoc';\r\nimport MoviesDialog from \"../MoviesDialog/MoviesDialog\";\r\nimport {moviesQuery} from \"./queries\";\r\nimport MoviesSearch from \"../MoviesSearch/MoviesSearch\";\r\n\r\nconst MoviesTable = ({classes, onOpen}) => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [itemData, setItemData] = useState({});\r\n    const [name, setName] = useState('');\r\n\r\n    const [getMovies, {loading, data, fetchMore}] = useLazyQuery(moviesQuery);\r\n\r\n    useEffect(() => {\r\n        getMovies({\r\n            variables: {name: \"\"}\r\n        });\r\n\r\n        if (data) {\r\n            setMovies(data.movies);\r\n        }\r\n    }, [getMovies, data]);\r\n\r\n    const handleChange = event => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        if (e.charCode === 13) {\r\n            fetchMore({\r\n                variables: {name},\r\n                updateQuery: (previousResult, {fetchMoreResult}) => fetchMoreResult\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClick = ({currentTarget}, data) => {\r\n        setAnchorEl(currentTarget);\r\n        setItemData(data)\r\n    };\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    const handleEdit = () => {\r\n        onOpen(itemData);\r\n        handleClose()\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        handleDialogOpen();\r\n        handleClose()\r\n    };\r\n\r\n    const handleDialogOpen = () => setOpenDialog(true);\r\n    const handleDialogClose = () => setOpenDialog(false);\r\n\r\n    return (\r\n        <>\r\n            <Paper>\r\n                <MoviesSearch name={name} handleChange={handleChange} handleSearch={handleSearch}/>\r\n            </Paper>\r\n\r\n            <MoviesDialog open={openDialog} handleClose={handleDialogClose} id={itemData.id}/>\r\n\r\n            {loading\r\n                ? <LinearProgress color=\"primary\"/>\r\n                : (\r\n                    <Paper className={classes.root}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Name</TableCell>\r\n                                    <TableCell>Genre</TableCell>\r\n                                    <TableCell align=\"right\">Rate</TableCell>\r\n                                    <TableCell>Director</TableCell>\r\n                                    <TableCell>Watched</TableCell>\r\n                                    <TableCell align=\"right\"></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                                {movies.map(movie => {\r\n                                    return (\r\n                                        <TableRow key={movie.id}>\r\n                                            <TableCell component=\"th\" scope=\"row\">{movie.name}</TableCell>\r\n                                            <TableCell>{movie.genre}</TableCell>\r\n                                            <TableCell align=\"right\">{movie.rate}</TableCell>\r\n                                            <TableCell>{movie.director.name}</TableCell>\r\n                                            <TableCell><Checkbox checked={movie.watched} disabled /></TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                <>\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={\r\n                                                            (e) => handleClick(e, movie)\r\n                                                        }\r\n                                                    >\r\n                                                        <MoreIcon/>\r\n                                                    </IconButton>\r\n\r\n                                                    <Menu\r\n                                                        id=\"simple-menu\"\r\n                                                        anchorEl={anchorEl}\r\n                                                        open={Boolean(anchorEl)}\r\n                                                        onClose={handleClose}\r\n                                                    >\r\n                                                        <MenuItem onClick={handleEdit}><CreateIcon /> Edit</MenuItem>\r\n                                                        <MenuItem onClick={handleDelete}><DeleteIcon/> Delete</MenuItem>\r\n                                                    </Menu>\r\n                                                </>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withHocs(MoviesTable)","import React, {useState} from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport withHocs from './MoviesHoc';\r\nimport MoviesForm from \"../MoviesForm/MoviesForm\";\r\nimport MoviesTable from \"../MoviesTable/MoviesTable\";\r\n\r\nconst Movies = ({classes}) => {\r\n    const [movieData, setMovieData] = useState({\r\n        id: '',\r\n        open: false,\r\n        name: '',\r\n        genre: '',\r\n        watched: false,\r\n        rate: 0,\r\n        directorId: ''\r\n    });\r\n\r\n    const handleClickOpen = (data = {}) => {\r\n        setMovieData(prevState => ({\r\n            ...prevState,\r\n            ...data,\r\n            open: true,\r\n            directorId: data.director ? data.director.id : ''\r\n        }))\r\n    };\r\n\r\n    const handleChange = name => ({target}) => {\r\n        setMovieData({\r\n            ...movieData,\r\n            [name]: target.value\r\n        })\r\n    };\r\n\r\n    const handleSelectChange = ({target}) => {\r\n        setMovieData({\r\n            ...movieData,\r\n            [target.name]: target.value\r\n        })\r\n    };\r\n\r\n    const handleCheckboxChange = name => {\r\n        return ({ target }) => {\r\n            setMovieData({\r\n                ...movieData,\r\n                [name]: target.checked\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setMovieData({\r\n            name: '',\r\n            genre: '',\r\n            watched: false,\r\n            rate: 0,\r\n            directorId: '',\r\n            open: false,\r\n            id: null\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MoviesForm\r\n                handleChange={handleChange}\r\n                handleSelectChange={handleSelectChange}\r\n                handleCheckboxChange={handleCheckboxChange}\r\n                selectedValue={\r\n                    {\r\n                        id: movieData.id,\r\n                        name: movieData.name,\r\n                        genre: movieData.genre,\r\n                        watched: movieData.watched,\r\n                        rate: movieData.rate,\r\n                        directorId: movieData.directorId\r\n                    }\r\n                }\r\n                open={movieData.open}\r\n                onClose={handleClose}\r\n            />\r\n\r\n            <div className={classes.wrapper}>\r\n                <MoviesTable onOpen={handleClickOpen} onClose={handleClose}/>\r\n\r\n                <Fab onClick={() => handleClickOpen()} color=\"primary\" aria-label=\"Add\" className={classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withHocs(Movies)","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    wrapper: {\r\n        position: 'relative',\r\n        minHeight: 'calc(100vh - 24px * 2 - 72px)',\r\n    },\r\n    fab: {\r\n        position: 'absolute',\r\n        bottom: '0.5rem',\r\n        right: '4rem',\r\n    },\r\n});","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    container: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    title: {\r\n        paddingBottom: 0,\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing.unit,\r\n        minWidth: 120,\r\n    },\r\n    wrapper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        minWidth: 100,\r\n        minHeight: 48,\r\n    },\r\n});","import {gql} from '@apollo/client';\r\n\r\nexport const addDirectorMutation = gql`\r\n    mutation addDirector($name: String!, $age: Int!) {\r\n        addDirector(name: $name, age: $age) {\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const updateDirectorMutation = gql`\r\n    mutation updateDirector($id: ID, $name: String!, $age: Int!) {\r\n        updateDirector(id: $id, name: $name, age: $age) {\r\n            name\r\n        }\r\n    }\r\n`;","import {gql} from '@apollo/client';\r\n\r\nexport const directorsQuery = gql`\r\n    query directorsQuery($name: String) {\r\n        directors(name: $name) {\r\n            id\r\n            name\r\n            age\r\n            movies {\r\n                name\r\n                id\r\n            }\r\n        }\r\n    } \r\n`;","import React, {useState} from \"react\";\r\nimport {Dialog, DialogTitle, TextField, Button} from \"@material-ui/core\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport {useMutation} from '@apollo/client';\r\nimport {Alert} from \"@material-ui/lab\";\r\n\r\nimport withHocs from './DirectorsFormHoc';\r\nimport {addDirectorMutation, updateDirectorMutation} from \"./mutations\";\r\nimport {directorsQuery} from \"../DirectorsTable/queries\";\r\n\r\nconst DirectorsForm = ({selectedValue = {}, onClose, classes, open, handleChange}) => {\r\n    const [alert, setAlert] = useState({\r\n        showAlert: false,\r\n        alertMessage: \"\"\r\n    });\r\n    const [addDirector] = useMutation(addDirectorMutation);\r\n    const [updateDirector] = useMutation(updateDirectorMutation);\r\n\r\n    const handleClose = () => onClose();\r\n\r\n    const handleSave = () => {\r\n        const {id, name, age} = selectedValue;\r\n\r\n        if (name !== '' && Number.parseInt(age)) {\r\n            if (id) {\r\n                updateDirector({\r\n                    variables: {\r\n                        id,\r\n                        name,\r\n                        age: Number(age)\r\n                    },\r\n                    refetchQueries: [{\r\n                        query: directorsQuery,\r\n                        variables: {name: \"\"}\r\n                    }]\r\n                })\r\n            } else {\r\n\r\n                addDirector({\r\n                    variables: {\r\n                        name,\r\n                        age: Number(age)\r\n                    },\r\n                    refetchQueries: [{\r\n                        query: directorsQuery,\r\n                        variables: {name: \"\"}\r\n                    }]\r\n                });\r\n            }\r\n\r\n            setAlert({\r\n                showAlert: false,\r\n                alertMessage: \"\"\r\n            });\r\n            onClose()\r\n        } else if (name === '') {\r\n            setAlert({\r\n                showAlert: true,\r\n                alertMessage: \"Director's name should not be empty\"\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open} aria-labelledby=\"simple-dialog-title\">\r\n            <DialogTitle className={classes.title} id=\"simple-dialog-title\">Director information</DialogTitle>\r\n\r\n            <form action=\"/\" className={classes.container} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    id=\"outlined-name\"\r\n                    label=\"Name\"\r\n                    className={classes.textField}\r\n                    value={selectedValue.name}\r\n                    onChange={handleChange('name')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                    id=\"outlined-genre\"\r\n                    label=\"Age\"\r\n                    className={classes.textField}\r\n                    value={selectedValue.age}\r\n                    onChange={handleChange('age')}\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n\r\n                <div className={classes.wrapper}>\r\n                    <Button onClick={handleSave} variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                        <SaveIcon /> Save\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            {alert.showAlert && <Alert severity=\"error\">{alert.alertMessage}</Alert>}\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default withHocs(DirectorsForm)","import { withStyles } from '@material-ui/core/styles';\r\n\r\nimport { styles } from './styles';\r\n\r\nexport default withStyles(styles);","export const styles = theme => ({\r\n    searchRoot: {\r\n        marginBottom: theme.spacing(3),\r\n        minHeight: theme.spacing(6),\r\n        display: 'flex',\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        overflowX: 'auto',\r\n    },\r\n});","import {gql} from '@apollo/client';\r\n\r\nexport const deleteDirectorMutation = gql`\r\n    mutation deleteDirector($id: ID) {\r\n        deleteDirector(id: $id) {\r\n            id\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {useMutation} from '@apollo/client';\r\n\r\nimport DialogModal from \"../DialogModal/DialogModal\";\r\nimport {deleteDirectorMutation} from \"./mutations\";\r\nimport {directorsQuery} from '../DirectorsTable/queries';\r\n\r\nconst DirectorsDialog = ({id, handleClose, open}) => {\r\n    const [deleteDirector] = useMutation(deleteDirectorMutation);\r\n\r\n    const handleDelete = () => {\r\n        deleteDirector({\r\n            variables: {id},\r\n            refetchQueries: [{\r\n                query: directorsQuery,\r\n                variables: {name: \"\"}\r\n            }]\r\n        });\r\n\r\n        handleClose()\r\n    };\r\n\r\n    return <DialogModal open={open} handleClose={handleClose} handleDelete={handleDelete}/>\r\n};\r\n\r\nexport default DirectorsDialog","import React from \"react\";\r\n\r\nimport SearchPanel from \"../SearchPanel/SearchPanel\";\r\n\r\nconst DirectorsSearch = ({name, handleChange, handleSearch}) => {\r\n    return <SearchPanel\r\n        name={name}\r\n        handleChange={handleChange}\r\n        handleSearch={handleSearch}\r\n        placeholderName=\"Directors Search\"\r\n    />\r\n};\r\n\r\nexport default DirectorsSearch","import React from \"react\";\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText} from \"@material-ui/core\";\r\nimport BlockIcon from '@material-ui/icons/Block';\r\n\r\nconst DirectorsErrorDialogModal = ({open, handleClose, errorText}) => (\r\n    <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n    >\r\n        <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                {errorText}\r\n            </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\"><BlockIcon /> Cancel</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n);\r\n\r\nexport default DirectorsErrorDialogModal","import React, {useState, useEffect} from \"react\";\r\nimport {Paper, Table, TableHead, TableRow, TableCell, TableBody, IconButton, Menu, MenuItem} from \"@material-ui/core\";\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {useLazyQuery} from '@apollo/client';\r\n\r\nimport withHocs from './DirectorsTableHoc';\r\nimport DirectorsDialog from \"../DirectorsDialog/DirectorsDialog\";\r\nimport {directorsQuery} from \"./queries\";\r\nimport DirectorsSearch from \"../DirectorsSearch/DirectorsSearch\";\r\nimport DirectorsErrorDialogModal from \"../DirectorsErrorDialogModal/DirectorsErrorDialogModal\";\r\n\r\nconst DirectorsTable = ({classes, onOpen}) => {\r\n    const [directors, setDirectors] = useState([]);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState(false);\r\n    const [itemData, setItemData] = useState({});\r\n    const [name, setName] = useState('');\r\n\r\n    const [getDirectors, {data, fetchMore}] = useLazyQuery(directorsQuery);\r\n\r\n    useEffect(() => {\r\n        getDirectors({\r\n            variables: {name: \"\"}\r\n        });\r\n\r\n        if (data) {\r\n            setDirectors(data.directors);\r\n        }\r\n    }, [getDirectors, data]);\r\n\r\n    const handleChange = event => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const handleSearch = (e) => {\r\n        if (e.charCode === 13) {\r\n            fetchMore({\r\n                variables: {name},\r\n                updateQuery: (previousResult, {fetchMoreResult}) => fetchMoreResult\r\n            })\r\n        }\r\n    };\r\n\r\n    const handleClick = ({currentTarget}, data) => {\r\n        setAnchorEl(currentTarget);\r\n        setItemData(data)\r\n    };\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    const handleEdit = row => {\r\n        onOpen(itemData);\r\n        handleClose()\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        (itemData.movies.length > 0) ? handleErrorDialogOpen() : handleDialogOpen();\r\n\r\n        handleClose()\r\n    };\r\n\r\n    const handleDialogOpen = () => setOpenDialog(true);\r\n    const handleDialogClose = () => setOpenDialog(false);\r\n\r\n    const handleErrorDialogOpen = () => setOpenErrorDialog(true);\r\n    const handleErrorDialogClose = () => setOpenErrorDialog(false);\r\n\r\n    return (\r\n        <>\r\n            <Paper>\r\n                <DirectorsSearch name={name} handleChange={handleChange} handleSearch={handleSearch}/>\r\n            </Paper>\r\n\r\n            <DirectorsDialog open={openDialog} handleClose={handleDialogClose} id={itemData.id}/>\r\n            <DirectorsErrorDialogModal\r\n                open={openErrorDialog}\r\n                handleClose={handleErrorDialogClose}\r\n                errorText=\"Directors with movies cannot be removed\"\r\n            />\r\n\r\n            <Paper className={classes.root}>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Name</TableCell>\r\n                            <TableCell align=\"right\">Age</TableCell>\r\n                            <TableCell>Movies</TableCell>\r\n                            <TableCell></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {directors.map(director => {\r\n                            return (\r\n                                <TableRow key={director.id}>\r\n                                    <TableCell component=\"th\" scope=\"row\">{director.name}</TableCell>\r\n                                    <TableCell align=\"right\">{director.age}</TableCell>\r\n                                    <TableCell>\r\n                                        {\r\n                                            director.movies.map((movie, key) => (\r\n                                                <div key={movie.name}>{`${key+1}. `}{movie.name}</div>\r\n                                            ))\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <>\r\n                                            <IconButton\r\n                                                color=\"inherit\"\r\n                                                onClick={(e) => handleClick(e, director)}\r\n                                            >\r\n                                                <MoreIcon/>\r\n                                            </IconButton>\r\n\r\n                                            <Menu\r\n                                                id=\"simple-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleClose}\r\n                                            >\r\n                                                <MenuItem onClick={() => handleEdit(director)}><CreateIcon /> Edit</MenuItem>\r\n                                                <MenuItem onClick={handleDelete}><DeleteIcon/> Delete</MenuItem>\r\n                                            </Menu>\r\n                                        </>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withHocs(DirectorsTable)","import React, {useState} from \"react\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport withHocs from './DirectorsHoc';\r\nimport DirectorsForm from \"../DirectorsForm/DirectorsForm\";\r\nimport DirectorsTable from \"../DirectorsTable/DirectorsTable\";\r\n\r\nconst Directors = ({classes}) => {\r\n    const [directorData, setDirectorData] = useState({\r\n        id: null,\r\n        open: false,\r\n        name: '',\r\n        age: 0\r\n    });\r\n\r\n    const handleClickOpen = data => {\r\n        setDirectorData(prevState => ({\r\n            ...prevState,\r\n            ...data,\r\n            open: true\r\n        }))\r\n    };\r\n\r\n    const handleChange = name => ({target}) => {\r\n        setDirectorData({\r\n            ...directorData,\r\n            [name]: target.value\r\n        })\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setDirectorData({\r\n            name: '',\r\n            age: 0,\r\n            id: null,\r\n            open: false\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DirectorsForm\r\n                handleChange={handleChange}\r\n                selectedValue={\r\n                    {\r\n                        id: directorData.id,\r\n                        name: directorData.name,\r\n                        age: directorData.age\r\n                    }\r\n                }\r\n                open={directorData.open}\r\n                onClose={handleClose}\r\n            />\r\n\r\n            <div className={classes.wrapper}>\r\n                <DirectorsTable onOpen={handleClickOpen}/>\r\n\r\n                <Fab onClick={() => handleClickOpen(null)} color=\"primary\" aria-label=\"Add\" className={classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default withHocs(Directors)","import React, {useState} from 'react';\nimport {AppBar, Tabs, Tab, Typography} from \"@material-ui/core\";\nimport MovieCreationIcon from '@material-ui/icons/MovieCreation';\nimport CameraIcon from '@material-ui/icons/Camera';\nimport SwipeableViews from \"react-swipeable-views\";\n\n\nimport withHocs from './TabsHoc';\nimport Movies from \"../Movies/Movies\";\nimport Directors from \"../Directors/Directors\";\n\nconst TabContainer = ({ children, dir }) => (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n        {children}\n    </Typography>\n);\n\nconst SimpleTabs = ({classes, theme}) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = (event, value) => setValue(value);\n    const handleChangeIndex = index => setValue(index);\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Tabs variant='fullWidth' value={value} onChange={handleChange}>\n                    <Tab label=\"Movies\" icon={<CameraIcon />}/>\n                    <Tab label=\"Directors\" icon={<MovieCreationIcon />}/>\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabContainer dir={theme.direction}><Movies/></TabContainer>\n                <TabContainer dir={theme.direction}><Directors/></TabContainer>\n            </SwipeableViews>\n        </div>\n    )\n};\n\nexport default withHocs(SimpleTabs)","import { createMuiTheme } from '@material-ui/core/styles';\nimport {blue, red} from \"@material-ui/core/colors\";\n\nexport default createMuiTheme({\n    typography: {\n        useNextVariants: true,\n        color: '#fff',\n    },\n    palette: {\n        type: 'dark',\n        primary: {\n            main: '#E535AB'\n        },\n        secondary: blue,\n        error: red,\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        contrastText: '#fff',\n    }\n});","import React from 'react';\r\nimport {ApolloClient, ApolloProvider, InMemoryCache} from '@apollo/client'\r\n\r\nimport Tabs from \"./components/Tabs/Tabs\";\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\nimport theme from \"./components/theme\";\r\n\r\nconst client = new ApolloClient({\r\n    uri: 'https://react-apollo-course.herokuapp.com/graphql',\r\n    // uri: 'http://localhost:3001/graphql',\r\n    cache: new InMemoryCache()\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <MuiThemeProvider theme={theme}>\r\n                <Tabs/>\r\n            </MuiThemeProvider>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}